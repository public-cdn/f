name: Update Images List

on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: '0 0 * * *' # Runs once a day
  workflow_dispatch: # Manual trigger

jobs:
  update-images-list:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Generate new_images.txt
      run: |
        # Define supported image formats and directories to ignore
        SUPPORTED_IMAGE_FORMATS="(.jpg|.jpeg|.png|.gif|.bmp|.webp)"
        IGNORE_NAMES=("CNAME" "README.md" "index.html" "404.html" "blank_popup_bg.png" "blank_popup_ico.png")
        IGNORE_DIRS=("css" "js" "td")
    
        # Create a temporary new_images.txt file
        echo "" > new_images.txt
    
        # Find and append image files to new_images.txt
        find . -type f | grep -Ei $SUPPORTED_IMAGE_FORMATS | while read -r file; do
          # Get the file name and directory
          FILE_NAME=$(basename "$file")
          FILE_DIR=$(dirname "$file")
    
          # Check if the file or directory should be ignored
          if [[ ! " ${IGNORE_NAMES[@]} " =~ " ${FILE_NAME} " ]] && [[ ! " ${IGNORE_DIRS[@]} " =~ " ${FILE_DIR} " ]]; then
            # Replace ./ with your site's URL
            FILE_PATH=$(echo "$file" | sed 's|^\./|https://f.laosepi.cc/|')
            echo "$FILE_PATH" >> new_images.txt
          fi
        done
    
        # Remove any leading or trailing empty lines
        sed -i '/^$/d' new_images.txt

    - name: Check for changes
      run: |
        # Create images.txt if it does not exist
        touch images.txt

        # Compare new_images.txt and images.txt
        if ! cmp -s new_images.txt images.txt; then
          # If the files are different, replace images.txt
          mv new_images.txt images.txt
          echo "Images list updated, changes detected."
          echo "Changes detected." > change_flag.txt
        else
          echo "No changes detected."
          rm new_images.txt
        fi

    - name: Commit and push changes
      if: ${{ always() }} && env.CHANGE_DETECTED == 'true'
      run: |
        # Check for any changes to commit
        if [ -f change_flag.txt ]; then
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add images.txt
          git commit -m "Update images list"
          git pull --rebase
          git push
          echo "Changes committed and pushed."
        else
          echo "No changes to commit."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        CHANGE_DETECTED: ${{ steps.change-check.outputs.changed }}
